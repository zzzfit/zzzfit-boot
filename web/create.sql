drop table if exists address cascade ;
drop table if exists alliance cascade ;
drop table if exists alliance_dians cascade ;
drop table if exists appointment cascade ;
drop table if exists attendance cascade ;
drop table if exists authority cascade ;
drop table if exists business_hour cascade ;
drop table if exists campaign cascade ;
drop table if exists class cascade ;
drop table if exists class_attendants cascade ;
drop table if exists class_teachers cascade ;
drop table if exists contract cascade ;
drop table if exists coupon cascade ;
drop table if exists course cascade ;
drop table if exists device cascade ;
drop table if exists dian cascade ;
drop table if exists franchisee cascade ;
drop table if exists invoice cascade ;
drop table if exists lead cascade ;
drop table if exists member cascade ;
drop table if exists member_card cascade ;
drop table if exists oauth2authorization cascade ;
drop table if exists oauth2authorization_consent cascade ;
drop table if exists oauth2registered_client cascade ;
drop table if exists order cascade ;
drop table if exists organization cascade ;
drop table if exists payment cascade ;
drop table if exists role cascade ;
drop table if exists role_authorities cascade ;
drop table if exists staff cascade ;
drop table if exists tenant cascade ;
drop table if exists user cascade ;
drop table if exists user_roles cascade ;
drop table if exists user_detail cascade ;
drop table if exists voucher cascade ;
drop sequence if exists user_seq;
create sequence user_seq start with 1 increment by 50;
create table address (latitude float(53), longitude float(53), id bigint not null, city varchar(255), district varchar(255), postal_code varchar(255), province varchar(255), street varchar(255), primary key (id));
create table alliance (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table alliance_dians (alliance_id bigint not null, dians_id bigint not null unique);
create table appointment (class_id bigint unique, id bigint not null, primary key (id));
create table attendance (check_in_time timestamp(6), class_id bigint unique, id bigint not null, primary key (id));
create table authority (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table business_hour (deleted boolean, end time(6), start time(6), created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table campaign (id bigint not null, primary key (id));
create table class (id bigint not null, primary key (id));
create table class_attendants (attendants_id bigint not null unique, class_id bigint not null, primary key (attendants_id, class_id));
create table class_teachers (class_id bigint not null, teachers_id bigint not null unique, primary key (class_id, teachers_id));
create table contract (id bigint not null, primary key (id));
create table coupon (id bigint not null, primary key (id));
create table course (id bigint not null, tags varchar(255), primary key (id));
create table device (id bigint not null, primary key (id));
create table dian (deleted boolean, shop_area float(24), created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table franchisee (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table invoice (paid_amount numeric(12,2) not null, id bigint not null, number varchar(16) not null, download_link varchar(255), primary key (id));
create table lead (id bigint not null, primary key (id));
create table member (id bigint not null, primary key (id));
create table member_card (end_date date, paid_amount numeric(12,2), start_date date, id bigint not null, primary key (id));
create table oauth2authorization (access_token_expires_at timestamp(6), access_token_issued_at timestamp(6), authorization_code_expires_at timestamp(6), authorization_code_issued_at timestamp(6), device_code_expires_at timestamp(6), device_code_issued_at timestamp(6), oidc_id_token_expires_at timestamp(6), oidc_id_token_issued_at timestamp(6), refresh_token_expires_at timestamp(6), refresh_token_issued_at timestamp(6), user_code_expires_at timestamp(6), user_code_issued_at timestamp(6), access_token_scopes varchar(100), access_token_type varchar(100), authorization_grant_type varchar(100) not null, id varchar(100) not null, registered_client_id varchar(100) not null, principal_name varchar(200) not null, authorized_scopes varchar(1000), access_token_value varbinary(255), refresh_token_value varbinary(255), access_token_metadata blob, attributes blob, authorization_code_metadata blob, authorization_code_value blob, device_code_metadata blob, device_code_value blob, oidc_id_token_metadata blob, oidc_id_token_value blob, refresh_token_metadata blob, state blob, user_code_metadata blob, user_code_value blob, primary key (id));
create table oauth2authorization_consent (registered_client_id varchar(100) not null, principal_name varchar(200) not null, authorities varchar(1000) not null, primary key (registered_client_id, principal_name));
create table oauth2registered_client (client_id_issued_at timestamp(6) not null, client_secret_expires_at timestamp(6), client_id varchar(100), id varchar(100) not null, client_name varchar(200), client_secret varchar(200), authorization_grant_types varchar(1000), client_authentication_methods varchar(1000), post_logout_redirect_uris varchar(1000), redirect_uris varchar(1000), scopes varchar(1000), client_settings varchar(2000), token_settings varchar(2000), primary key (id));
create table order (id bigint not null, primary key (id));
create table organization (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table payment (id bigint not null, primary key (id));
create table role (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id));
create table role_authorities (authorities_id bigint not null, role_id bigint not null, primary key (authorities_id, role_id));
create table staff (id bigint not null, primary key (id));
create table tenant (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), primary key (id), constraint UKdcxf3ksi0gyn1tieeq0id96lm unique (name));
create table user (deleted boolean, created_at timestamp(6) not null, created_by bigint not null, id bigint not null, tenant_id bigint not null, updated_at timestamp(6) not null, updated_by bigint not null, name varchar(63) not null, description varchar(255), nickname varchar(255), password varchar(255), primary key (id));
create table user_roles (roles_id bigint not null, user_id bigint not null, primary key (roles_id, user_id));
create table user_detail (user_id bigint not null, primary key (user_id));
create table voucher (id bigint not null, primary key (id));
alter table if exists alliance_dians add constraint FKatywp75m2f1lsrbahfhomurv9 foreign key (dians_id) references dian;
alter table if exists alliance_dians add constraint FKgkfn0chcjdvacpf0l2ss1murc foreign key (alliance_id) references alliance;
alter table if exists appointment add constraint FK4r7cwqrwsavnyebiybpeyt350 foreign key (class_id) references class;
alter table if exists attendance add constraint FKlsi77buto2iknunetxvp2vtw3 foreign key (class_id) references class;
alter table if exists class_attendants add constraint FK8n29xo6yfgbmge0hi4mipgh19 foreign key (attendants_id) references member;
alter table if exists class_attendants add constraint FKbsnc7t6muwellwmo80sgskjr foreign key (class_id) references class;
alter table if exists class_teachers add constraint FK277dl4p8j9ag9ukueb53xvqn1 foreign key (teachers_id) references staff;
alter table if exists class_teachers add constraint FK7d3xlbrpue44wny4fghbxqmc foreign key (class_id) references class;
alter table if exists role_authorities add constraint FK4cy1svku5asbuvksc7ap47iyi foreign key (authorities_id) references authority;
alter table if exists role_authorities add constraint FK8dv2uo3imjpm4dmk7pge9v2vo foreign key (role_id) references role;
alter table if exists user_roles add constraint FKj9553ass9uctjrmh0gkqsmv0d foreign key (roles_id) references role;
alter table if exists user_roles add constraint FK55itppkw3i07do3h7qoclqd4k foreign key (user_id) references user;
alter table if exists user_detail add constraint FKc2fr118twu8aratnm1qop1mn9 foreign key (user_id) references user;
